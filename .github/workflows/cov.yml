# .github/workflows/ci.yml
name: CI

on:
  pull_request:
  push:
    branches:
      - "main"
      
permissions:
  contents: read
  pull-requests: write
  pages: write
  id-token: write

jobs:
  test:
    name: Run tests & display coverage
    runs-on: ubuntu-latest
    steps:
      - name: "Check out repo"
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        
      - name: Run tests
        run: |
          source .venv/bin/activate 
          pytest | tee pytest-coverage.txt

      - name: Pytest Coverage Comment
        if: github.event_name == 'pull_request'
        uses: MishaKav/pytest-coverage-comment@v1.1.54
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pytest-coverage-path: ./pytest-coverage.txt
          pytest-xml-coverage-path: ./coverage.xml
      
      - name: Generate Coverage Badge
        if: github.ref == 'refs/heads/main'
        run: |
          source .venv/bin/activate 
          genbadge coverage -i coverage.xml -o htmlcov/coverage-badge.svg

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v3

      - name: Upload Artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          # location of the coverage artifacts
          path: "./htmlcov"
  
  
  deploy-coverage:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    
    permissions:
      pages: write
      id-token: write

    environment:
      # environment created automatically by GitHub
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
